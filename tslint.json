{
    "defaultSeverity": "error",
    "extends": [ "tslint:recommended" ],
    "rules": {
        "adjacent-overload-signatures": true,
        "align": true,
        "array-type": [ true, "array" ],
        "arrow-parens": true,
        "arrow-return-shorthand": [ true ],
        "await-promise": [ false, "Thenable", "Promiselike" ], //, "AbortablePromise" ], // TODO: AbortablePromise when available
        "ban": [ true,
            "eval",
            { "name": "$", "message": "please don't" },
            { "name": ["_", "*"], "message": "please don't" }
            // { "name": ["*", "forEach"], "message": "Use a regular for loop instead." } // TODO: exception for container types
        ],
        "ban-comma-operator": true,
        "ban-types": [ true, ["Object", "Use {} instead."], ["String"] ],
        "binary-expression-operand-order": true,
        "callable-types": true,
        "class-name": true,
        "comment-format": false,
        "completed-docs": true,
        "curly": true,
        "cyclomatic-complexity": [true, 20],
        "deprecation": true,
        "encoding": true,
        "eofline": true,
        "file-header": false,
        "forin": true,
        "import-blacklist": [ true, "rxjs", "core-js" ],
        "import-spacing": true,
        "indent": [ true, "tabs", 4 ],
        "interface-name": [ true, "always-prefix" ],
        "interface-over-type-literal": false,
        "jsdoc-format": [ true, "check-multiline-start" ],
        "label-position": true,
        "linebreak-style": [ true, "LF" ],
        "match-default-export-name": true,
        "max-classes-per-file": [ true, 10 ],
        "max-file-line-count": [ true, 1000 ],
        "max-line-length": [ true, 280 ], // TODO: exclude tslint:disable-line comments, exclude TODO comments
        "member-access": [ true, "check-accessor", "check-constructor", "check-parameter-property" ],
        "member-ordering": [ true, { "order": [
            "public-static-field",
            "protected-static-field",
            "private-static-field",
            "public-static-method",
            "protected-static-method",
            "private-static-method",
            "public-instance-field",
            "protected-instance-field",
            "private-instance-field",
            "public-constructor",
            "protected-constructor",
            "private-constructor",
            "public-instance-method",
            "protected-instance-method",
            "private-instance-method"
        ] } ],
        "new-parens": true,
        "newline-before-return": false,
        "newline-per-chained-call": false,
        "no-angle-bracket-type-assertion": true,
        "no-any": true,
        "no-arg": true,
        "no-boolean-literal-compare": false,
        "no-bitwise": false,
        "no-conditional-assignment": true,
        "no-consecutive-blank-lines": [ true, 2 ],
        "no-console": false,
        "no-construct": true,
        "no-debugger": false,
        "no-default-export": true,
        "no-duplicate-imports": true,
        "no-duplicate-super": true,
        "no-duplicate-switch-case": true,
        "no-duplicate-variable": [ true, "check-parameters" ],
        "no-dynamic-delete": false,
        "no-empty": true,
        "no-empty-interface": false,
        "no-eval": true,
        "no-floating-promises": false, //[ true, "Thenable", "Promislike", "Abortable" ], // TODO: exception for methods on promiseLikes what return themselves // TODO: exception for handler that explicitly return PromiseLike.resolve(...)
        "no-for-in-array": true,
        "no-implicit-dependencies": true,
        "no-import-side-effect": true,
        "no-inferrable-types": false,
        "no-inferred-empty-object-type": true,
        "no-internal-module": true,
        "no-invalid-template-strings": true,
        "no-invalid-this": true,
        "no-irregular-whitespace": true,
        "no-magic-numbers": [ true ],
        "no-mergeable-namespace": true,
        "no-misused-new": false, // TODO: prohibit constructor in interface, but not new in class
        "no-namespace": true,
        "no-null-keyword": true,
        "no-non-null-assertion": false,
        "no-object-literal-type-assertion": true,
        "no-parameter-properties": false,
        "no-parameter-reassignment": true,
        "no-redundant-jsdoc": true,
        "no-reference": true,
        "no-reference-import": true,
        "no-return-await": true,
        "no-require-imports": true,
        "no-shadowed-variable": true,
        "no-sparse-arrays": true,
        "no-string-literal": true,
        "no-string-throw": true,
        "no-submodule-imports": false,
        "no-switch-case-fall-through": true,
        "no-this-assignment": true,
        "no-trailing-whitespace": [ true, "ignore-template-strings" ],
        "no-unbound-method": true,
        "no-unnecessary-callback-wrapper": true, // TODO: fix false positives when unwrapping breaks type constraints
        "no-unnecessary-class": true,
        "no-unnecessary-initializer": false,
        "no-unnecessary-qualifier": true,
        "no-unnecessary-type-assertion": true,
        "no-unsafe-any": true, // TODO: exceptions for e.g. isAny && isAny.prop
        "no-unsafe-finally": true,
        "no-unused-expression": [ true, "allow-fast-null-checks" ],
        "no-unused-variable": [ true, "check-parameters" ], // TODO: check-parameters exception for anonymous functions conforming to type declarations
        "no-use-before-declare": false, // TODO: option to apply only within method/function scope
        "no-var-keyword": true,
        "no-var-requires": true,
        "no-void-expression": [ true, "ignore-arrow-function-shorthand" ],
        "number-literal-format": true,
        "object-literal-key-quotes": [ true, "consistent-as-needed" ],
        "object-literal-shorthand": false,
        "object-literal-sort-keys": [ false, "ignore-case", "match-declaration-order", "shorthand-first" ], // TODO: fails to match-declaration-order on AbortablePrepared
        "one-line": false, // TODO: allow forms where each clause is confined to one line [ true, "check-catch", "check-finally", "check-else", "check-open-brace", "check-whitespace" ],
        "one-variable-per-declaration": true,
        "only-arrow-functions": false, // TODO: allow arrow functions with type parameters OR add notation to give type parameters to anonymous functions
        "ordered-imports": [ false, { // TODO: fix expected ordering when one is a prefix of another
            "grouped-imports": true,
            "import-sources-order": "case-insensitive",
            "module-source-path": "full",
            "named-imports-order": "case-insensitive"
        } ],
        "prefer-conditional-expression": false, // [true, "check-else-if"], // TODO: enable after fix for https://github.com/palantir/tslint/issues/3353 ?
        "prefer-const": [ true, {"destructuring": "all"} ],
        "prefer-for-of": true,
        "prefer-function-over-method": true,
        "prefer-method-signature": false, // TODO: limit to classes and interfaces, exclude parameter lists
        "prefer-object-spread": true,
        "prefer-readonly": true,
        "prefer-switch": [ true, { "min-cases": 2 } ],
        "prefer-template": false,
        "promise-function-async": false, // TODO: don't trigger on functions that don't return a promise?
        "quotemark": [ true, "double", "jsx-double", "avoid-escape" ], // TODO: option to make all strings template strings
        "radix": true,
        "restrict-plus-operands": true,
        "return-undefined": true,
        "semicolon": [ true, "always" ],
        "space-before-function-paren": [ true, { "anonymous": "always", "named": "never", "asyncArrow": "always", "method": "never", "constructor": "never" } ],
        "space-within-parens": false,
        "strict-boolean-expressions": false, // TODO: allow-undefined-union doesn't work? [ true, "allow-null-union", "allow-undefined-union", "allow-mix" ],
        "strict-type-predicates": true,
        "switch-default": true,
        "switch-final-break": [ true, "always" ],
        "trailing-comma": [ true, { "multiline": "always", "singleline": "ignore" } ],
        "triple-equals": [ true, "allow-null-check", "allow-undefined-check" ],
        "type-literal-delimiter": false, // TODO: choose comma delimiter
        "typedef": false,
        "typedef-whitespace": false, // TODO: alignment with [ true, "nospace", "align" ]
        "unified-signatures": true,
        "use-default-type-parameter": false,
        "use-isnan": true,
        "variable-name": [ true, "ban-keywords", "check-format", "allow-leading-underscore" ],
        "whitespace": false // TODO: whitespace with the right exceptions; check-arrow
        //"whitespace": [ true, "check-decl", "check-operator", "check-module", "check-separator", "check-rest-spread", "check-type", "check-typecast", "check-preblock" ]
        // TODO: never assign a promise/promiselike, only chain on it
    },
    "jsRules": true,
    "rulesDirectory": []
}